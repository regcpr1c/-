
Процедура ПриОткрытии()
	
	Заголовок = Заголовок + " отчета " + ОтчетОбъект.МетаДанные().Синоним;
	
КонецПроцедуры

Процедура ПолныйСписокПолейНажатие(Элемент)
	// Расшифровать собственным отчетом
	ФормаВыбораПоля = ПолучитьОбщуюФорму("ФормаВыбораДоступногоПоляКомпоновщикаНастроек");
	ФормаВыбораПоля.КомпоновщикНастроек = ОтчетОбъект.КомпоновщикНастроек;
	РодителиПоля = Новый Массив;
	ОтчетОбъект.ДобавитьРодителей(ФормаОтчета.ДанныеРасшифровки.Элементы[Расшифровка], ФормаОтчета.ДанныеРасшифровки, РодителиПоля);
	ФормаВыбораПоля.РодителиПоля = РодителиПоля;
	Поле = ФормаВыбораПоля.ОткрытьМодально();
	Если Поле = Неопределено Тогда
		Возврат;
	КонецЕсли;
	СтароеЗначениеСписка = СписокПолейРасшифровки.НайтиПоЗначению(ТекущееПолеРасшифровка);
	ТекущееПолеРасшифровка = Строка(Поле.Поле);
	Если СтароеЗначениеСписка <> Неопределено тогда
		ИндексСтарПоля = СписокПолейРасшифровки.Индекс(СтароеЗначениеСписка);
		СтарыйЭлемент = ЭлементыФормы["ПолеКартинкиВыбораРасшифровки" + ИндексСтарПоля];
		СтарыйЭлемент.ЦветФона    = ЦветаСтиля.ЦветФонаКнопки;
		СтарыйЭлемент.ЦветТекста  = WebЦвета.ТемноСиний;
		СтарыйЭлемент.ГиперСсылка = истина;
	КонецЕсли;

	ОбновитьФорму(ложь);
КонецПроцедуры

Процедура НарисоватьПоляРасшифровки()
	
	МассивУдаляемыхОбъектов = Новый Массив;
	Для каждого ЭлементФормы из ЭлементыФормы Цикл
		Если Найти(ЭлементФормы.Имя, "ПолеКартинкиВыбораРасшифровки") <> 0 тогда
			МассивУдаляемыхОбъектов.Добавить(ЭлементФормы);
		КонецЕсли;
	КонецЦикла;
	
	Для каждого ЭлементФормы из МассивУдаляемыхОбъектов Цикл
		ЭлементыФормы.Удалить(ЭлементФормы);
	КонецЦикла;
	
	Для каждого Поле из СписокПолейРасшифровки Цикл
		ДобавитьКнопкуВыбораВариантаОтчета(СписокПолейРасшифровки.Индекс(Поле), Поле.Представление, Поле.Значение = ТекущееПолеРасшифровка);
	КонецЦикла;
	 
КонецПроцедуры

Процедура ДобавитьКнопкуВыбораВариантаОтчета(Индекс, Заголовок, Пометка)
	
	Смещение = 0;
	
	ПолеКартинки = ЭлементыФормы.Добавить(Тип("ПолеКартинки"), "ПолеКартинкиВыбораРасшифровки" + Индекс, Истина, ЭлементыФормы.ПанельПолейРасшифровки);
	ПолеКартинки.УстановитьПривязку(ГраницаЭлементаУправления.Право, ЭлементыФормы.ПанельПолейРасшифровки, ГраницаЭлементаУправления.Право);
	ПолеКартинки.Лево = 0;
	ПолеКартинки.Верх = (Индекс) * 45 + Смещение;
	ПолеКартинки.Ширина = ЭлементыФормы.ПанельПолейРасшифровки.Ширина - 2;
	ПолеКартинки.Высота = 45;
	ПолеКартинки.ГиперСсылка = Истина;
	ПолеКартинки.ЦветФона = ЦветаСтиля.ЦветФонаКнопки;
	ПолеКартинки.ЦветТекста = WebЦвета.ТемноСиний;
	ПолеКартинки.ТекстНевыбраннойКартинки = Заголовок;
	ПолеКартинки.АвтоКонтекстноеМеню = Ложь;
	ПолеКартинки.Подсказка = "Расшифровать по полю " + Заголовок;
	ПолеКартинки.Шрифт = Новый Шрифт(ПолеКартинки.Шрифт, "Verdana");
	Если Пометка Тогда
		ПолеКартинки.ЦветФона = Новый Цвет(255, 248, 220);
		ПолеКартинки.ЦветТекста = ЦветаСтиля.ЦветТекстаКнопки;
		ПолеКартинки.ГиперСсылка = ложь;
	Иначе
		ПолеКартинки.ГиперСсылка = истина;
	КонецЕсли;
	Действие = Новый Действие("ПроцедурОбработкаНажатияКнопкиРасшифровки");
	ПолеКартинки.УстановитьДействие("Нажатие", Действие);
	ПолеКартинки.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.Подчеркивание, 1);
	
КонецПроцедуры

Процедура ПроцедурОбработкаНажатияКнопкиРасшифровки(Элемент)
	СтроеПоле      = ТекущееПолеРасшифровка;
	СтароеЗначениеСписка = СписокПолейРасшифровки.НайтиПоЗначению(СтроеПоле);
	Если СтароеЗначениеСписка <> Неопределено тогда
		ИндексСтарПоля = СписокПолейРасшифровки.Индекс(СтароеЗначениеСписка);
		СтарыйЭлемент = ЭлементыФормы["ПолеКартинкиВыбораРасшифровки" + ИндексСтарПоля];
		СтарыйЭлемент.ЦветФона = ЦветаСтиля.ЦветФонаКнопки;
		СтарыйЭлемент.ЦветТекста = WebЦвета.ТемноСиний;
		СтарыйЭлемент.ГиперСсылка = истина;
	КонецЕсли;
		
	Индекс = Число(Сред(Элемент.Имя, 30,  СтрДлина(Элемент.Имя)-29));
	ТекущееПолеРасшифровка = СписокПолейРасшифровки[Индекс].Значение;
	
	//Элемент = ЭлементыФормы.Получить("ПолеКартинкиВыбораРасшифровки" + Индекс);
	Элемент.ЦветФона    = Новый Цвет(255, 248, 220);
	Элемент.ЦветТекста  = ЦветаСтиля.ЦветТекстаКнопки;
	Элемент.ГиперСсылка = ложь;
	
	ОбновитьФорму(ложь);
	
КонецПроцедуры


Процедура ОбновитьФорму(ОбновитьРасшифровку = истина) Экспорт
	
	Если ОбновитьРасшифровку тогда
		ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(ДанныеРасшифровки, 
		Новый ИсточникДоступныхНастроекКомпоновкиДанных(ОтчетОбъект.СхемаКомпоновкиДанных));
		
		НастройкиКомпоновки = ОбработкаРасшифровки.Расшифровать(Расшифровка, Новый ПолеКомпоновкиДанных(ТекущееПолеРасшифровка));
		
		ОтчетОбъект.КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиКомпоновки);
		ОтчетОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
		ОтчетОбъект.ДобавитьВыбранноеПоле(ОтчетОбъект.КомпоновщикНастроек, ПолеРасшифровки);
	Иначе
		ОтчетОбъект.КомпоновщикНастроек.Настройки.Структура.Очистить();
		ОтчетОбъект.ДобавитьГруппировку(ОтчетОбъект.КомпоновщикНастроек, ТекущееПолеРасшифровка)
	КонецЕсли;
	
	//доработать заголовок по полю по которому расшифровываем
	ДоступноеПоле = ОтчетОбъект.ПолучитьДоступноеПоле(Новый ПолеКомпоновкиДанных(ТекущееПолеРасшифровка), ОтчетОбъект.КомпоновщикНастроек.Настройки.ДоступныеПоляГруппировок); 
	
	ОтчетОбъект.УстановитьПараметрВывода(ОтчетОбъект.КомпоновщикНастроек, "Title", "Расшифровка по полю " + ДоступноеПоле.Заголовок);
	Группировка = ОтчетОбъект.ПолучитьПоследнийЭлементСтруктуры(ОтчетОбъект.КомпоновщикНастроек);
	Если Группировка.Порядок.Элементы.Количество() = 0 Тогда
		ОтчетОбъект.ДобавитьАвтоЭлементПорядка(Группировка);
	КонецЕсли;
	

	ОтчетОбъект.СформироватьОтчет(ЭлементыФормы.Результат, ДанныеРасшифровки);
	
КонецПроцедуры

Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	ОтчетОбъект.ОбработкаРасшифровкиТиповогоОтчета(Расшифровка, СтандартнаяОбработка, ОтчетОбъект, ЭтаФорма);

КонецПроцедуры

Процедура ОбновлениеОтображения()
	НарисоватьПоляРасшифровки();
КонецПроцедуры
